'use strict';
var mongoose = require('mongoose');
mongoose.Promise = require('bluebird');

// ----- EXPORTS -----
module.exports = {
  getProjects : getProjects,
  postProject: postProject,
  getUsers : getUsers,
  postUser : postUser,
  getSession: getSession,
  postSession : postSession
};

// ----- SETUP DB -----
var mongoURI = 'mongodb://'+require('./config.js').username+':'+require('./config.js').pw+'@ds119718.mlab.com:19718/croissant-dvorak';
mongoose.connect(mongoURI);

var db = mongoose.connection;
db.on('error', console.error.bind(console, 'connection error:'));
db.once('open', function () {
  console.log('Mongodb connection open');
});

// ----- MODEL INFO -----

var models = {};

var projectSchema = mongoose.Schema({
  //Proj_id: int()  generated by mongo
  name: String,
  geoLocation : {
    lat : Number,
    long : Number
  },
  address : {
    street : String,
    street2 : String,
    zip: Number,
    city: String,
    state: String,
    country: String
  },
  description : String,
  owner : mongoose.Schema.ObjectId,
  startDate : Date,
  compDate : Date,
  picture: String // url to host?
});

models.Project = mongoose.model('Project', projectSchema);

var feedbackSchema = mongoose.Schema({
  userId: mongoose.Schema.ObjectId,
  projId: mongoose.Schema.ObjectId,
  textData: String,
  date: Date
});

models.Feedback = mongoose.model('Feedback', feedbackSchema);

var userSchema = mongoose.Schema({
  username: String,
  firstName: String,
  lastName: String,
  email: String
});

models.User = mongoose.model('User', userSchema);

var sessionSchema = mongoose.Schema({
  sessionID: String,
  userId: mongoose.Schema.ObjectId
});

models.Session = mongoose.model('Session', sessionSchema);


// --------- METHODS ---------
// ----- PROJECT METHODS -----

function getProjects(cb){
  models.Project.find()
    .then(function(res){
      console.log('projects' , res);
      cb(null, res);
  })
    .catch(function(err){
      console.error('Error', err);
      cb(err);
    });
}

function postProject(project, cb){
  models.Project(project).save()
    .then(function(res){
      cb(null, res);
    })
    .catch(function(err){
      cb(err);
    });
}

// ----- USER METHODS -----

function getUsers(cb){
  models.User.find()
    .then(function(res){
      console.log('users' , res);
      cb(null, res);
  })
    .catch(function(err){
      console.error('Error', err);
      cb(err);
    });
}

function postUser(user, cb){
  models.User(user).save()
    .then(function(res){
      cb(null, res);
    })
    .catch(function(err){
      cb(err);
    });
}

// ----- SESSION METHODS -----

function getSession(sessionID,cb){
  models.Session.findOne({sessionID: sessionID})
    .then(function(res){
      console.log('session' , res);
      cb(null, res);
  })
    .catch(function(err){
      console.error('Error', err);
      cb(err);
    });
}

function postSession(session, cb){
  models.Session({sessionID: session.sessionID, userId: session.userId}).save()
    .then(function(res){
      cb(null, res);
    })
    .catch(function(err){
      cb(err);
    });
}
